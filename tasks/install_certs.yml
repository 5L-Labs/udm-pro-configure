---
- name: "Install pip via apt"
  ansible.builtin.apt:
    name: python3-pip
    state: present
  become: true
  ignore_errors: true
- name: "Install hvac within a home directory (instead of venv madness...)"
  ansible.builtin.pip:
    name: hvac
    extra_args: --user
  ignore_errors: true
- name: Debug
  debug:
    msg: "Rotating certs for {{ subdomain }}"

- name: Read a secret
  community.hashi_vault.vault_kv2_get:
    url: "{{ vault_address }}"
    engine_mount_point: certs/
    path: "{{ vault_cert_algo }}/_.{{ subdomain }}"
    auth_method: userpass
    validate_certs: true
    username: "{{ vault_cert_user }}"
    password: "{{ vault_cert_password }}"
  register: vault_secret
- name: Check directory exists
  file:
    path: "{{ ssl_backup_dir }}"
    state: directory
    mode: 0755
    owner: root
    group: root

- name: Backup certs to directory
  shell: "mv -f {{ ssl_cert_dir }}/*.crt {{ ssl_cert_dir }}/*.key {{ ssl_backup_dir }}"
  ignore_errors: true

- name: Set Fact
  set_fact:
    fqdn: "{{ inventory_hostname.split('.') }}"
    cert_dir: "{{ inventory_hostname.split('.')[1:] | join('.') }}/rsa2048/"

- name: Copy private key file
  copy:
    content: "{{ vault_secret.data.data.crt}}"
    #    src: "certificates/{{ cert_dir }}/_.{{ inventory_hostname.split('.')[1:] | join('.') }}.crt"
    dest: "{{ ssl_cert_dir }}/{{ item }}"
    owner: root
    group: root
    mode: 0644
  loop:
    - "unifi-core.crt"
    - "unifi-core-direct.crt"

- name: Copy private key file
  copy:
    #    src: "certificates/{{ cert_dir }}/_.{{ inventory_hostname.split('.')[1:] | join('.') }}.key"
    content: "{{ vault_secret.data.data.key}}"
    dest: "{{ ssl_cert_dir }}/{{ item }}"
    owner: root
    group: root
    mode: 0644
  loop:
    - "unifi-core.key"
    - "unifi-core-direct.key"

- name: Restart unifi-core
  systemd:
    name: unifi-core
    state: restarted
    enabled: yes
